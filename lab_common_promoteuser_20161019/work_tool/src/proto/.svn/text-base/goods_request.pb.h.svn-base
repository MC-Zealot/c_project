// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goods_request.proto

#ifndef PROTOBUF_goods_5frequest_2eproto__INCLUDED
#define PROTOBUF_goods_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace goods_interface {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_goods_5frequest_2eproto();
void protobuf_AssignDesc_goods_5frequest_2eproto();
void protobuf_ShutdownFile_goods_5frequest_2eproto();

class KeyWordPair;
class InterestsPair;
class UserAttr;
class AdEng2IdxSrvMsg;

// ===================================================================

class KeyWordPair : public ::google::protobuf::Message {
 public:
  KeyWordPair();
  virtual ~KeyWordPair();
  
  KeyWordPair(const KeyWordPair& from);
  
  inline KeyWordPair& operator=(const KeyWordPair& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyWordPair& default_instance();
  
  void Swap(KeyWordPair* other);
  
  // implements Message ----------------------------------------------
  
  KeyWordPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyWordPair& from);
  void MergeFrom(const KeyWordPair& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string keywords = 1;
  inline bool has_keywords() const;
  inline void clear_keywords();
  static const int kKeywordsFieldNumber = 1;
  inline const ::std::string& keywords() const;
  inline void set_keywords(const ::std::string& value);
  inline void set_keywords(const char* value);
  inline void set_keywords(const char* value, size_t size);
  inline ::std::string* mutable_keywords();
  inline ::std::string* release_keywords();
  
  // optional uint32 weight = 2;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 2;
  inline ::google::protobuf::uint32 weight() const;
  inline void set_weight(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:goods_interface.KeyWordPair)
 private:
  inline void set_has_keywords();
  inline void clear_has_keywords();
  inline void set_has_weight();
  inline void clear_has_weight();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* keywords_;
  ::google::protobuf::uint32 weight_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_goods_5frequest_2eproto();
  friend void protobuf_AssignDesc_goods_5frequest_2eproto();
  friend void protobuf_ShutdownFile_goods_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static KeyWordPair* default_instance_;
};
// -------------------------------------------------------------------

class InterestsPair : public ::google::protobuf::Message {
 public:
  InterestsPair();
  virtual ~InterestsPair();
  
  InterestsPair(const InterestsPair& from);
  
  inline InterestsPair& operator=(const InterestsPair& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterestsPair& default_instance();
  
  void Swap(InterestsPair* other);
  
  // implements Message ----------------------------------------------
  
  InterestsPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterestsPair& from);
  void MergeFrom(const InterestsPair& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 interests = 1;
  inline bool has_interests() const;
  inline void clear_interests();
  static const int kInterestsFieldNumber = 1;
  inline ::google::protobuf::uint32 interests() const;
  inline void set_interests(::google::protobuf::uint32 value);
  
  // optional uint32 weight = 2;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 2;
  inline ::google::protobuf::uint32 weight() const;
  inline void set_weight(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:goods_interface.InterestsPair)
 private:
  inline void set_has_interests();
  inline void clear_has_interests();
  inline void set_has_weight();
  inline void clear_has_weight();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 interests_;
  ::google::protobuf::uint32 weight_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_goods_5frequest_2eproto();
  friend void protobuf_AssignDesc_goods_5frequest_2eproto();
  friend void protobuf_ShutdownFile_goods_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static InterestsPair* default_instance_;
};
// -------------------------------------------------------------------

class UserAttr : public ::google::protobuf::Message {
 public:
  UserAttr();
  virtual ~UserAttr();
  
  UserAttr(const UserAttr& from);
  
  inline UserAttr& operator=(const UserAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAttr& default_instance();
  
  void Swap(UserAttr* other);
  
  // implements Message ----------------------------------------------
  
  UserAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAttr& from);
  void MergeFrom(const UserAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 gender = 1;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 1;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);
  
  // optional uint32 age = 2;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 2;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);
  
  // repeated .goods_interface.InterestsPair interests = 3;
  inline int interests_size() const;
  inline void clear_interests();
  static const int kInterestsFieldNumber = 3;
  inline const ::goods_interface::InterestsPair& interests(int index) const;
  inline ::goods_interface::InterestsPair* mutable_interests(int index);
  inline ::goods_interface::InterestsPair* add_interests();
  inline const ::google::protobuf::RepeatedPtrField< ::goods_interface::InterestsPair >&
      interests() const;
  inline ::google::protobuf::RepeatedPtrField< ::goods_interface::InterestsPair >*
      mutable_interests();
  
  // repeated .goods_interface.KeyWordPair keywords = 4;
  inline int keywords_size() const;
  inline void clear_keywords();
  static const int kKeywordsFieldNumber = 4;
  inline const ::goods_interface::KeyWordPair& keywords(int index) const;
  inline ::goods_interface::KeyWordPair* mutable_keywords(int index);
  inline ::goods_interface::KeyWordPair* add_keywords();
  inline const ::google::protobuf::RepeatedPtrField< ::goods_interface::KeyWordPair >&
      keywords() const;
  inline ::google::protobuf::RepeatedPtrField< ::goods_interface::KeyWordPair >*
      mutable_keywords();
  
  // @@protoc_insertion_point(class_scope:goods_interface.UserAttr)
 private:
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_age();
  inline void clear_has_age();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 age_;
  ::google::protobuf::RepeatedPtrField< ::goods_interface::InterestsPair > interests_;
  ::google::protobuf::RepeatedPtrField< ::goods_interface::KeyWordPair > keywords_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_goods_5frequest_2eproto();
  friend void protobuf_AssignDesc_goods_5frequest_2eproto();
  friend void protobuf_ShutdownFile_goods_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static UserAttr* default_instance_;
};
// -------------------------------------------------------------------

class AdEng2IdxSrvMsg : public ::google::protobuf::Message {
 public:
  AdEng2IdxSrvMsg();
  virtual ~AdEng2IdxSrvMsg();
  
  AdEng2IdxSrvMsg(const AdEng2IdxSrvMsg& from);
  
  inline AdEng2IdxSrvMsg& operator=(const AdEng2IdxSrvMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdEng2IdxSrvMsg& default_instance();
  
  void Swap(AdEng2IdxSrvMsg* other);
  
  // implements Message ----------------------------------------------
  
  AdEng2IdxSrvMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdEng2IdxSrvMsg& from);
  void MergeFrom(const AdEng2IdxSrvMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string psid = 1;
  inline bool has_psid() const;
  inline void clear_psid();
  static const int kPsidFieldNumber = 1;
  inline const ::std::string& psid() const;
  inline void set_psid(const ::std::string& value);
  inline void set_psid(const char* value);
  inline void set_psid(const char* value, size_t size);
  inline ::std::string* mutable_psid();
  inline ::std::string* release_psid();
  
  // optional uint64 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);
  
  // optional uint32 adnum = 3;
  inline bool has_adnum() const;
  inline void clear_adnum();
  static const int kAdnumFieldNumber = 3;
  inline ::google::protobuf::uint32 adnum() const;
  inline void set_adnum(::google::protobuf::uint32 value);
  
  // optional uint32 location = 4;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 4;
  inline ::google::protobuf::uint32 location() const;
  inline void set_location(::google::protobuf::uint32 value);
  
  // optional uint32 adtype = 5;
  inline bool has_adtype() const;
  inline void clear_adtype();
  static const int kAdtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 adtype() const;
  inline void set_adtype(::google::protobuf::uint32 value);
  
  // optional .goods_interface.UserAttr userattr = 6;
  inline bool has_userattr() const;
  inline void clear_userattr();
  static const int kUserattrFieldNumber = 6;
  inline const ::goods_interface::UserAttr& userattr() const;
  inline ::goods_interface::UserAttr* mutable_userattr();
  inline ::goods_interface::UserAttr* release_userattr();
  
  // optional uint32 device = 7;
  inline bool has_device() const;
  inline void clear_device();
  static const int kDeviceFieldNumber = 7;
  inline ::google::protobuf::uint32 device() const;
  inline void set_device(::google::protobuf::uint32 value);
  
  // optional uint32 debug = 8;
  inline bool has_debug() const;
  inline void clear_debug();
  static const int kDebugFieldNumber = 8;
  inline ::google::protobuf::uint32 debug() const;
  inline void set_debug(::google::protobuf::uint32 value);
  
  // optional string score_name = 9;
  inline bool has_score_name() const;
  inline void clear_score_name();
  static const int kScoreNameFieldNumber = 9;
  inline const ::std::string& score_name() const;
  inline void set_score_name(const ::std::string& value);
  inline void set_score_name(const char* value);
  inline void set_score_name(const char* value, size_t size);
  inline ::std::string* mutable_score_name();
  inline ::std::string* release_score_name();
  
  // optional string index_choosing = 10;
  inline bool has_index_choosing() const;
  inline void clear_index_choosing();
  static const int kIndexChoosingFieldNumber = 10;
  inline const ::std::string& index_choosing() const;
  inline void set_index_choosing(const ::std::string& value);
  inline void set_index_choosing(const char* value);
  inline void set_index_choosing(const char* value, size_t size);
  inline ::std::string* mutable_index_choosing();
  inline ::std::string* release_index_choosing();
  
  // repeated string custid_list = 11;
  inline int custid_list_size() const;
  inline void clear_custid_list();
  static const int kCustidListFieldNumber = 11;
  inline const ::std::string& custid_list(int index) const;
  inline ::std::string* mutable_custid_list(int index);
  inline void set_custid_list(int index, const ::std::string& value);
  inline void set_custid_list(int index, const char* value);
  inline void set_custid_list(int index, const char* value, size_t size);
  inline ::std::string* add_custid_list();
  inline void add_custid_list(const ::std::string& value);
  inline void add_custid_list(const char* value);
  inline void add_custid_list(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& custid_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_custid_list();
  
  // optional string target_data_name = 12;
  inline bool has_target_data_name() const;
  inline void clear_target_data_name();
  static const int kTargetDataNameFieldNumber = 12;
  inline const ::std::string& target_data_name() const;
  inline void set_target_data_name(const ::std::string& value);
  inline void set_target_data_name(const char* value);
  inline void set_target_data_name(const char* value, size_t size);
  inline ::std::string* mutable_target_data_name();
  inline ::std::string* release_target_data_name();
  
  // optional int32 custid_topn = 13;
  inline bool has_custid_topn() const;
  inline void clear_custid_topn();
  static const int kCustidTopnFieldNumber = 13;
  inline ::google::protobuf::int32 custid_topn() const;
  inline void set_custid_topn(::google::protobuf::int32 value);
  
  // optional uint32 carrier = 14;
  inline bool has_carrier() const;
  inline void clear_carrier();
  static const int kCarrierFieldNumber = 14;
  inline ::google::protobuf::uint32 carrier() const;
  inline void set_carrier(::google::protobuf::uint32 value);
  
  // optional uint32 brand = 15;
  inline bool has_brand() const;
  inline void clear_brand();
  static const int kBrandFieldNumber = 15;
  inline ::google::protobuf::uint32 brand() const;
  inline void set_brand(::google::protobuf::uint32 value);
  
  // optional uint32 network_type = 16;
  inline bool has_network_type() const;
  inline void clear_network_type();
  static const int kNetworkTypeFieldNumber = 16;
  inline ::google::protobuf::uint32 network_type() const;
  inline void set_network_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:goods_interface.AdEng2IdxSrvMsg)
 private:
  inline void set_has_psid();
  inline void clear_has_psid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_adnum();
  inline void clear_has_adnum();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_adtype();
  inline void clear_has_adtype();
  inline void set_has_userattr();
  inline void clear_has_userattr();
  inline void set_has_device();
  inline void clear_has_device();
  inline void set_has_debug();
  inline void clear_has_debug();
  inline void set_has_score_name();
  inline void clear_has_score_name();
  inline void set_has_index_choosing();
  inline void clear_has_index_choosing();
  inline void set_has_target_data_name();
  inline void clear_has_target_data_name();
  inline void set_has_custid_topn();
  inline void clear_has_custid_topn();
  inline void set_has_carrier();
  inline void clear_has_carrier();
  inline void set_has_brand();
  inline void clear_has_brand();
  inline void set_has_network_type();
  inline void clear_has_network_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* psid_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 adnum_;
  ::google::protobuf::uint32 location_;
  ::goods_interface::UserAttr* userattr_;
  ::google::protobuf::uint32 adtype_;
  ::google::protobuf::uint32 device_;
  ::std::string* score_name_;
  ::std::string* index_choosing_;
  ::google::protobuf::uint32 debug_;
  ::google::protobuf::int32 custid_topn_;
  ::google::protobuf::RepeatedPtrField< ::std::string> custid_list_;
  ::std::string* target_data_name_;
  ::google::protobuf::uint32 carrier_;
  ::google::protobuf::uint32 brand_;
  ::google::protobuf::uint32 network_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  friend void  protobuf_AddDesc_goods_5frequest_2eproto();
  friend void protobuf_AssignDesc_goods_5frequest_2eproto();
  friend void protobuf_ShutdownFile_goods_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static AdEng2IdxSrvMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// KeyWordPair

// optional string keywords = 1;
inline bool KeyWordPair::has_keywords() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyWordPair::set_has_keywords() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyWordPair::clear_has_keywords() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyWordPair::clear_keywords() {
  if (keywords_ != &::google::protobuf::internal::kEmptyString) {
    keywords_->clear();
  }
  clear_has_keywords();
}
inline const ::std::string& KeyWordPair::keywords() const {
  return *keywords_;
}
inline void KeyWordPair::set_keywords(const ::std::string& value) {
  set_has_keywords();
  if (keywords_ == &::google::protobuf::internal::kEmptyString) {
    keywords_ = new ::std::string;
  }
  keywords_->assign(value);
}
inline void KeyWordPair::set_keywords(const char* value) {
  set_has_keywords();
  if (keywords_ == &::google::protobuf::internal::kEmptyString) {
    keywords_ = new ::std::string;
  }
  keywords_->assign(value);
}
inline void KeyWordPair::set_keywords(const char* value, size_t size) {
  set_has_keywords();
  if (keywords_ == &::google::protobuf::internal::kEmptyString) {
    keywords_ = new ::std::string;
  }
  keywords_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KeyWordPair::mutable_keywords() {
  set_has_keywords();
  if (keywords_ == &::google::protobuf::internal::kEmptyString) {
    keywords_ = new ::std::string;
  }
  return keywords_;
}
inline ::std::string* KeyWordPair::release_keywords() {
  clear_has_keywords();
  if (keywords_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = keywords_;
    keywords_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 weight = 2;
inline bool KeyWordPair::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyWordPair::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyWordPair::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyWordPair::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
inline ::google::protobuf::uint32 KeyWordPair::weight() const {
  return weight_;
}
inline void KeyWordPair::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
}

// -------------------------------------------------------------------

// InterestsPair

// optional uint32 interests = 1;
inline bool InterestsPair::has_interests() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InterestsPair::set_has_interests() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InterestsPair::clear_has_interests() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InterestsPair::clear_interests() {
  interests_ = 0u;
  clear_has_interests();
}
inline ::google::protobuf::uint32 InterestsPair::interests() const {
  return interests_;
}
inline void InterestsPair::set_interests(::google::protobuf::uint32 value) {
  set_has_interests();
  interests_ = value;
}

// optional uint32 weight = 2;
inline bool InterestsPair::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InterestsPair::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InterestsPair::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InterestsPair::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
inline ::google::protobuf::uint32 InterestsPair::weight() const {
  return weight_;
}
inline void InterestsPair::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
}

// -------------------------------------------------------------------

// UserAttr

// optional uint32 gender = 1;
inline bool UserAttr::has_gender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAttr::set_has_gender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAttr::clear_has_gender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAttr::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 UserAttr::gender() const {
  return gender_;
}
inline void UserAttr::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// optional uint32 age = 2;
inline bool UserAttr::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAttr::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAttr::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAttr::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 UserAttr::age() const {
  return age_;
}
inline void UserAttr::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
}

// repeated .goods_interface.InterestsPair interests = 3;
inline int UserAttr::interests_size() const {
  return interests_.size();
}
inline void UserAttr::clear_interests() {
  interests_.Clear();
}
inline const ::goods_interface::InterestsPair& UserAttr::interests(int index) const {
  return interests_.Get(index);
}
inline ::goods_interface::InterestsPair* UserAttr::mutable_interests(int index) {
  return interests_.Mutable(index);
}
inline ::goods_interface::InterestsPair* UserAttr::add_interests() {
  return interests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::goods_interface::InterestsPair >&
UserAttr::interests() const {
  return interests_;
}
inline ::google::protobuf::RepeatedPtrField< ::goods_interface::InterestsPair >*
UserAttr::mutable_interests() {
  return &interests_;
}

// repeated .goods_interface.KeyWordPair keywords = 4;
inline int UserAttr::keywords_size() const {
  return keywords_.size();
}
inline void UserAttr::clear_keywords() {
  keywords_.Clear();
}
inline const ::goods_interface::KeyWordPair& UserAttr::keywords(int index) const {
  return keywords_.Get(index);
}
inline ::goods_interface::KeyWordPair* UserAttr::mutable_keywords(int index) {
  return keywords_.Mutable(index);
}
inline ::goods_interface::KeyWordPair* UserAttr::add_keywords() {
  return keywords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::goods_interface::KeyWordPair >&
UserAttr::keywords() const {
  return keywords_;
}
inline ::google::protobuf::RepeatedPtrField< ::goods_interface::KeyWordPair >*
UserAttr::mutable_keywords() {
  return &keywords_;
}

// -------------------------------------------------------------------

// AdEng2IdxSrvMsg

// required string psid = 1;
inline bool AdEng2IdxSrvMsg::has_psid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_psid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdEng2IdxSrvMsg::clear_has_psid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdEng2IdxSrvMsg::clear_psid() {
  if (psid_ != &::google::protobuf::internal::kEmptyString) {
    psid_->clear();
  }
  clear_has_psid();
}
inline const ::std::string& AdEng2IdxSrvMsg::psid() const {
  return *psid_;
}
inline void AdEng2IdxSrvMsg::set_psid(const ::std::string& value) {
  set_has_psid();
  if (psid_ == &::google::protobuf::internal::kEmptyString) {
    psid_ = new ::std::string;
  }
  psid_->assign(value);
}
inline void AdEng2IdxSrvMsg::set_psid(const char* value) {
  set_has_psid();
  if (psid_ == &::google::protobuf::internal::kEmptyString) {
    psid_ = new ::std::string;
  }
  psid_->assign(value);
}
inline void AdEng2IdxSrvMsg::set_psid(const char* value, size_t size) {
  set_has_psid();
  if (psid_ == &::google::protobuf::internal::kEmptyString) {
    psid_ = new ::std::string;
  }
  psid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdEng2IdxSrvMsg::mutable_psid() {
  set_has_psid();
  if (psid_ == &::google::protobuf::internal::kEmptyString) {
    psid_ = new ::std::string;
  }
  return psid_;
}
inline ::std::string* AdEng2IdxSrvMsg::release_psid() {
  clear_has_psid();
  if (psid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = psid_;
    psid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint64 uid = 2;
inline bool AdEng2IdxSrvMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdEng2IdxSrvMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdEng2IdxSrvMsg::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 AdEng2IdxSrvMsg::uid() const {
  return uid_;
}
inline void AdEng2IdxSrvMsg::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 adnum = 3;
inline bool AdEng2IdxSrvMsg::has_adnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_adnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdEng2IdxSrvMsg::clear_has_adnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdEng2IdxSrvMsg::clear_adnum() {
  adnum_ = 0u;
  clear_has_adnum();
}
inline ::google::protobuf::uint32 AdEng2IdxSrvMsg::adnum() const {
  return adnum_;
}
inline void AdEng2IdxSrvMsg::set_adnum(::google::protobuf::uint32 value) {
  set_has_adnum();
  adnum_ = value;
}

// optional uint32 location = 4;
inline bool AdEng2IdxSrvMsg::has_location() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_location() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AdEng2IdxSrvMsg::clear_has_location() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AdEng2IdxSrvMsg::clear_location() {
  location_ = 0u;
  clear_has_location();
}
inline ::google::protobuf::uint32 AdEng2IdxSrvMsg::location() const {
  return location_;
}
inline void AdEng2IdxSrvMsg::set_location(::google::protobuf::uint32 value) {
  set_has_location();
  location_ = value;
}

// optional uint32 adtype = 5;
inline bool AdEng2IdxSrvMsg::has_adtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_adtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AdEng2IdxSrvMsg::clear_has_adtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AdEng2IdxSrvMsg::clear_adtype() {
  adtype_ = 0u;
  clear_has_adtype();
}
inline ::google::protobuf::uint32 AdEng2IdxSrvMsg::adtype() const {
  return adtype_;
}
inline void AdEng2IdxSrvMsg::set_adtype(::google::protobuf::uint32 value) {
  set_has_adtype();
  adtype_ = value;
}

// optional .goods_interface.UserAttr userattr = 6;
inline bool AdEng2IdxSrvMsg::has_userattr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_userattr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AdEng2IdxSrvMsg::clear_has_userattr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AdEng2IdxSrvMsg::clear_userattr() {
  if (userattr_ != NULL) userattr_->::goods_interface::UserAttr::Clear();
  clear_has_userattr();
}
inline const ::goods_interface::UserAttr& AdEng2IdxSrvMsg::userattr() const {
  return userattr_ != NULL ? *userattr_ : *default_instance_->userattr_;
}
inline ::goods_interface::UserAttr* AdEng2IdxSrvMsg::mutable_userattr() {
  set_has_userattr();
  if (userattr_ == NULL) userattr_ = new ::goods_interface::UserAttr;
  return userattr_;
}
inline ::goods_interface::UserAttr* AdEng2IdxSrvMsg::release_userattr() {
  clear_has_userattr();
  ::goods_interface::UserAttr* temp = userattr_;
  userattr_ = NULL;
  return temp;
}

// optional uint32 device = 7;
inline bool AdEng2IdxSrvMsg::has_device() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_device() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AdEng2IdxSrvMsg::clear_has_device() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AdEng2IdxSrvMsg::clear_device() {
  device_ = 0u;
  clear_has_device();
}
inline ::google::protobuf::uint32 AdEng2IdxSrvMsg::device() const {
  return device_;
}
inline void AdEng2IdxSrvMsg::set_device(::google::protobuf::uint32 value) {
  set_has_device();
  device_ = value;
}

// optional uint32 debug = 8;
inline bool AdEng2IdxSrvMsg::has_debug() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_debug() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AdEng2IdxSrvMsg::clear_has_debug() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AdEng2IdxSrvMsg::clear_debug() {
  debug_ = 0u;
  clear_has_debug();
}
inline ::google::protobuf::uint32 AdEng2IdxSrvMsg::debug() const {
  return debug_;
}
inline void AdEng2IdxSrvMsg::set_debug(::google::protobuf::uint32 value) {
  set_has_debug();
  debug_ = value;
}

// optional string score_name = 9;
inline bool AdEng2IdxSrvMsg::has_score_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_score_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AdEng2IdxSrvMsg::clear_has_score_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AdEng2IdxSrvMsg::clear_score_name() {
  if (score_name_ != &::google::protobuf::internal::kEmptyString) {
    score_name_->clear();
  }
  clear_has_score_name();
}
inline const ::std::string& AdEng2IdxSrvMsg::score_name() const {
  return *score_name_;
}
inline void AdEng2IdxSrvMsg::set_score_name(const ::std::string& value) {
  set_has_score_name();
  if (score_name_ == &::google::protobuf::internal::kEmptyString) {
    score_name_ = new ::std::string;
  }
  score_name_->assign(value);
}
inline void AdEng2IdxSrvMsg::set_score_name(const char* value) {
  set_has_score_name();
  if (score_name_ == &::google::protobuf::internal::kEmptyString) {
    score_name_ = new ::std::string;
  }
  score_name_->assign(value);
}
inline void AdEng2IdxSrvMsg::set_score_name(const char* value, size_t size) {
  set_has_score_name();
  if (score_name_ == &::google::protobuf::internal::kEmptyString) {
    score_name_ = new ::std::string;
  }
  score_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdEng2IdxSrvMsg::mutable_score_name() {
  set_has_score_name();
  if (score_name_ == &::google::protobuf::internal::kEmptyString) {
    score_name_ = new ::std::string;
  }
  return score_name_;
}
inline ::std::string* AdEng2IdxSrvMsg::release_score_name() {
  clear_has_score_name();
  if (score_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = score_name_;
    score_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string index_choosing = 10;
inline bool AdEng2IdxSrvMsg::has_index_choosing() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_index_choosing() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AdEng2IdxSrvMsg::clear_has_index_choosing() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AdEng2IdxSrvMsg::clear_index_choosing() {
  if (index_choosing_ != &::google::protobuf::internal::kEmptyString) {
    index_choosing_->clear();
  }
  clear_has_index_choosing();
}
inline const ::std::string& AdEng2IdxSrvMsg::index_choosing() const {
  return *index_choosing_;
}
inline void AdEng2IdxSrvMsg::set_index_choosing(const ::std::string& value) {
  set_has_index_choosing();
  if (index_choosing_ == &::google::protobuf::internal::kEmptyString) {
    index_choosing_ = new ::std::string;
  }
  index_choosing_->assign(value);
}
inline void AdEng2IdxSrvMsg::set_index_choosing(const char* value) {
  set_has_index_choosing();
  if (index_choosing_ == &::google::protobuf::internal::kEmptyString) {
    index_choosing_ = new ::std::string;
  }
  index_choosing_->assign(value);
}
inline void AdEng2IdxSrvMsg::set_index_choosing(const char* value, size_t size) {
  set_has_index_choosing();
  if (index_choosing_ == &::google::protobuf::internal::kEmptyString) {
    index_choosing_ = new ::std::string;
  }
  index_choosing_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdEng2IdxSrvMsg::mutable_index_choosing() {
  set_has_index_choosing();
  if (index_choosing_ == &::google::protobuf::internal::kEmptyString) {
    index_choosing_ = new ::std::string;
  }
  return index_choosing_;
}
inline ::std::string* AdEng2IdxSrvMsg::release_index_choosing() {
  clear_has_index_choosing();
  if (index_choosing_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = index_choosing_;
    index_choosing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string custid_list = 11;
inline int AdEng2IdxSrvMsg::custid_list_size() const {
  return custid_list_.size();
}
inline void AdEng2IdxSrvMsg::clear_custid_list() {
  custid_list_.Clear();
}
inline const ::std::string& AdEng2IdxSrvMsg::custid_list(int index) const {
  return custid_list_.Get(index);
}
inline ::std::string* AdEng2IdxSrvMsg::mutable_custid_list(int index) {
  return custid_list_.Mutable(index);
}
inline void AdEng2IdxSrvMsg::set_custid_list(int index, const ::std::string& value) {
  custid_list_.Mutable(index)->assign(value);
}
inline void AdEng2IdxSrvMsg::set_custid_list(int index, const char* value) {
  custid_list_.Mutable(index)->assign(value);
}
inline void AdEng2IdxSrvMsg::set_custid_list(int index, const char* value, size_t size) {
  custid_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdEng2IdxSrvMsg::add_custid_list() {
  return custid_list_.Add();
}
inline void AdEng2IdxSrvMsg::add_custid_list(const ::std::string& value) {
  custid_list_.Add()->assign(value);
}
inline void AdEng2IdxSrvMsg::add_custid_list(const char* value) {
  custid_list_.Add()->assign(value);
}
inline void AdEng2IdxSrvMsg::add_custid_list(const char* value, size_t size) {
  custid_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AdEng2IdxSrvMsg::custid_list() const {
  return custid_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AdEng2IdxSrvMsg::mutable_custid_list() {
  return &custid_list_;
}

// optional string target_data_name = 12;
inline bool AdEng2IdxSrvMsg::has_target_data_name() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_target_data_name() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AdEng2IdxSrvMsg::clear_has_target_data_name() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AdEng2IdxSrvMsg::clear_target_data_name() {
  if (target_data_name_ != &::google::protobuf::internal::kEmptyString) {
    target_data_name_->clear();
  }
  clear_has_target_data_name();
}
inline const ::std::string& AdEng2IdxSrvMsg::target_data_name() const {
  return *target_data_name_;
}
inline void AdEng2IdxSrvMsg::set_target_data_name(const ::std::string& value) {
  set_has_target_data_name();
  if (target_data_name_ == &::google::protobuf::internal::kEmptyString) {
    target_data_name_ = new ::std::string;
  }
  target_data_name_->assign(value);
}
inline void AdEng2IdxSrvMsg::set_target_data_name(const char* value) {
  set_has_target_data_name();
  if (target_data_name_ == &::google::protobuf::internal::kEmptyString) {
    target_data_name_ = new ::std::string;
  }
  target_data_name_->assign(value);
}
inline void AdEng2IdxSrvMsg::set_target_data_name(const char* value, size_t size) {
  set_has_target_data_name();
  if (target_data_name_ == &::google::protobuf::internal::kEmptyString) {
    target_data_name_ = new ::std::string;
  }
  target_data_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdEng2IdxSrvMsg::mutable_target_data_name() {
  set_has_target_data_name();
  if (target_data_name_ == &::google::protobuf::internal::kEmptyString) {
    target_data_name_ = new ::std::string;
  }
  return target_data_name_;
}
inline ::std::string* AdEng2IdxSrvMsg::release_target_data_name() {
  clear_has_target_data_name();
  if (target_data_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = target_data_name_;
    target_data_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 custid_topn = 13;
inline bool AdEng2IdxSrvMsg::has_custid_topn() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_custid_topn() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AdEng2IdxSrvMsg::clear_has_custid_topn() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AdEng2IdxSrvMsg::clear_custid_topn() {
  custid_topn_ = 0;
  clear_has_custid_topn();
}
inline ::google::protobuf::int32 AdEng2IdxSrvMsg::custid_topn() const {
  return custid_topn_;
}
inline void AdEng2IdxSrvMsg::set_custid_topn(::google::protobuf::int32 value) {
  set_has_custid_topn();
  custid_topn_ = value;
}

// optional uint32 carrier = 14;
inline bool AdEng2IdxSrvMsg::has_carrier() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_carrier() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AdEng2IdxSrvMsg::clear_has_carrier() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AdEng2IdxSrvMsg::clear_carrier() {
  carrier_ = 0u;
  clear_has_carrier();
}
inline ::google::protobuf::uint32 AdEng2IdxSrvMsg::carrier() const {
  return carrier_;
}
inline void AdEng2IdxSrvMsg::set_carrier(::google::protobuf::uint32 value) {
  set_has_carrier();
  carrier_ = value;
}

// optional uint32 brand = 15;
inline bool AdEng2IdxSrvMsg::has_brand() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_brand() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AdEng2IdxSrvMsg::clear_has_brand() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AdEng2IdxSrvMsg::clear_brand() {
  brand_ = 0u;
  clear_has_brand();
}
inline ::google::protobuf::uint32 AdEng2IdxSrvMsg::brand() const {
  return brand_;
}
inline void AdEng2IdxSrvMsg::set_brand(::google::protobuf::uint32 value) {
  set_has_brand();
  brand_ = value;
}

// optional uint32 network_type = 16;
inline bool AdEng2IdxSrvMsg::has_network_type() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AdEng2IdxSrvMsg::set_has_network_type() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AdEng2IdxSrvMsg::clear_has_network_type() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AdEng2IdxSrvMsg::clear_network_type() {
  network_type_ = 0u;
  clear_has_network_type();
}
inline ::google::protobuf::uint32 AdEng2IdxSrvMsg::network_type() const {
  return network_type_;
}
inline void AdEng2IdxSrvMsg::set_network_type(::google::protobuf::uint32 value) {
  set_has_network_type();
  network_type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace goods_interface

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_goods_5frequest_2eproto__INCLUDED
